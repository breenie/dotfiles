#!/bin/bash
set -e

if ! [ -L ~/.ssh ]
then
  echo "Run script/setup first!" >&2
  exit 1
fi

1p_ssh_get() {
  local key_name="$2"
  local key_path="$HOME/.ssh/$key_name"
  local pub_key_path="${key_path}.pub"
  local account="$3"

  if [ -f "$key_path" ]; then
    echo "$key_name already exists in ~/.ssh/"
  else
    echo "Extracting private key to ~/.ssh/$key_name..."
    if op read "$1" --account "$account" > "$key_path"; then
      chmod 600 "$key_path"
      echo "Private key saved to $key_path"
    else
      echo "Failed to retrieve private key!" >&2
      rm -f "$key_path"
      return
    fi
  fi

  # Generate public key from private key
  if [ -f "$pub_key_path" ]; then
    echo "Public key already exists."
  else
    echo "Generating public key from private key..."
    if ssh-keygen -y -f "$key_path" > "$pub_key_path"; then
      chmod 644 "$pub_key_path"
      echo "Public key saved to $pub_key_path"
    else
      echo "Failed to generate public key!" >&2
      rm -f "$pub_key_path"
    fi
  fi

  # Add key to SSH agent & Keychain
  echo "Adding $key_path to ssh-agent and Keychain..."
  ssh-add --apple-use-keychain "$key_path"
}

1p_ssh_get "op://Personal/z7dw7rgruhmxhgu5qq5d5gg4ua/private key" id_rsa W3JHOMPSBJEB3C5Z6IF6HJTPEI
1p_ssh_get "op://Personal/sun6bhlsc2mrrxteytwbqn5sgu/private key" id_ed25519_signing W3JHOMPSBJEB3C5Z6IF6HJTPEI
1p_ssh_get "op://Personal/zborjecrrbnbntwl3i23zxh6dq/private key" id_ed25519 W3JHOMPSBJEB3C5Z6IF6HJTPEI
  
1p_ssh_get "op://umkzyfr3ayo7ttdveg7fyc33fe/fdxubfiwgvcvcjayjmvxaderri/private key" meatballs XJ3IGTSQNBBLZLCH4UVWBZQ5HA
1p_ssh_get "op://umkzyfr3ayo7ttdveg7fyc33fe/5r3kqwgoh2rrh5lzjsziozljue/private key" intofilm-stage XJ3IGTSQNBBLZLCH4UVWBZQ5HA
1p_ssh_get "op://umkzyfr3ayo7ttdveg7fyc33fe/xsh6wslosp5tiiy3rn7ygpy64i/private key" intofilm-production XJ3IGTSQNBBLZLCH4UVWBZQ5HA
1p_ssh_get "op://umkzyfr3ayo7ttdveg7fyc33fe/insecure-deployer/private key" insecure-deployer XJ3IGTSQNBBLZLCH4UVWBZQ5HA

echo "breenie@users.noreply.github.com $(cat "$HOME/.ssh/id_rsa.pub")" > "$HOME/.config/git/allowed_signers"
echo "breenie@users.noreply.github.com $(cat "$HOME/.ssh/id_ed25519_signing.pub")" >> "$HOME/.config/git/allowed_signers"

1p_gpg_get() {
  local account="$3"
  local gpg_key_path
  gpg_key_path=$(mktemp)

  if gpg --list-secret-keys | grep -q "$2"; then
    echo "GPG key for $2 already exists."
  else
    echo "Extracting GPG key for $2..."
    if op read "$1" --account "$account" | base64 -d > "$gpg_key_path"; then
      gpg --import "$gpg_key_path"
      rm -f "$gpg_key_path"  # Remove after import
      echo "GPG key imported successfully."
    else
      echo "Failed to retrieve or decode GPG key!" >&2
      rm -f "$gpg_key_path"
      return 1
    fi
  fi

  # Set trust level to ultimate
  echo -e "5\ny\n" | gpg --command-fd 0 --edit-key "$2" trust
}

1p_gpg_get "op://Personal/6qlunp3d7bh7guhuthy22przhi/password" yellow-triangles-begone XJ3IGTSQNBBLZLCH4UVWBZQ5HA

# if ! command -v aws >/dev/null
# then
#   echo "Install aws-cli first!" >&2
#   exit 1
# fi

# aws_configure_cli () {
#   onepassword_login

#   echo "Configuring aws profile ${2}..."

#   OLDIFS=$IFS
#   IFS=$'\n'

#   # This assumes there is a section named "aws-cli" in 1password 
#   # The fields should be named to match their value in the aws configure command:
#   #   $ aws configure set 1password_label   field
#   #   $ aws configure set aws_access_key_id somevalue
#   for row in $(op item get $1 --format json | jq ".fields[] | select(.section.label == \"aws-cli\")" | jq -c); do
#     _jq() {
#       echo ${row} | jq -r ${1}
#     }

#     aws configure set $(_jq ".label") $(_jq ".value") --profile $2
#   done

#   IFS=$OLDIFS
# }

# # This is my personal 1password account
# aws_configure_cli ujptzik5a5frtman4cjikerptu default

# aws_configure_cli vvz2emc3xrdjvgdaoqczruhgqu intofilm-master
# aws_configure_cli pnfvxet36rbt5byoth5dbvnx7i intofilm-production
# aws_configure_cli br4ggiaxkfdjbgff42lmdbbbo4 intofilm-development
# aws_configure_cli jsbmt4kb5ves3ol4b2sfrevqyy intofilm-legacy
# aws_configure_cli 22hinbuhj5aevcxyzyw5cfruyu aerian-production
